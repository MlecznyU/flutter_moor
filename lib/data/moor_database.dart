import 'package:fluttermoor/data/tags_dao.dart';
import 'package:fluttermoor/data/model_tags.dart';
import 'package:fluttermoor/data/task_dao.dart';
import 'package:fluttermoor/data/model_task.dart';
import 'package:moor_flutter/moor_flutter.dart';

part 'moor_database.g.dart';

@UseMoor(tables: [Tasks, Tags], daos: [TaskDao, TagDao])
class AppDatabase extends _$AppDatabase {
  AppDatabase()
      : super(FlutterQueryExecutor.inDatabaseFolder(
            path: ('db.sqlite'), logStatements: true));

  @override
  // TODO: implement schemaVersion
  int get schemaVersion => 1;
}

//import 'package:moor_flutter/moor_flutter.dart';
//
//part 'moor_database.g.dart';
//
////@DataClassName("customName") we can add custom name to table or class name will be used instead
//class Tasks extends Table {
//  //autoIncrement sets it to primary key
//  IntColumn get id => integer().autoIncrement()();
//
//  TextColumn get name => text().withLength(min: 1, max: 15)();
//
//  DateTimeColumn get dueDate => dateTime().nullable().call();
//
//  //we can use .call() at the end or just (). I will use () cos it is shorter
//  BoolColumn get completed => boolean().withDefault(Constant(false))();
//
////  How to set custom primary key?
////
////  @override
////  Set<Column> get primaryKey => {id,name};
////  Now id and name are primaryKeys
//}
//
//@UseMoor(tables: [Tasks])
//// if u want to use database classes in more u need to anotate it with @UseMore
//class AppDatabase extends _$AppDatabase {
//  // _$ are autogenerated class
////every database class need super constructor so it can pass something
//
//  AppDatabase()
//      : super(FlutterQueryExecutor.inDatabaseFolder(
//          path: ('db.sqlite'),
//          logStatements: true,
//        ));
//// at the start there will be a lot of errors but it will go away after generate code
//// command to generate should be paste in terminal : flutter packages pub run build_runner watch
//}
